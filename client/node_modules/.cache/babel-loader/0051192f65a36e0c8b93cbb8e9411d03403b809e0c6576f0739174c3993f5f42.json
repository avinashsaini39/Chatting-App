{"ast":null,"code":"var _jsxFileName = \"/Users/avinashsaini/Documents/project/chat/client/src/components/Chatroom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Card, List, Input, Button, Layout, Row, Col } from 'antd';\nimport io from 'socket.io-client';\nimport './ChatRoom.css';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Content\n} = Layout;\nconst socket = io('http://localhost:5500');\nconst ChatRoom = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isGroupChat, setIsGroupChat] = useState(false);\n  const chatContainerRef = useRef(null);\n  useEffect(() => {\n    const username = localStorage.getItem('username');\n    if (username) {\n      socket.emit('user connected', username);\n    }\n    socket.emit('get users');\n    socket.on('users list', usersList => {\n      setUsers(usersList.filter(user => user.username !== username)); // Filter out the signed-in user\n    });\n    socket.on('user status', userStatus => {\n      setUsers(prevUsers => prevUsers.map(user => user.username === userStatus.username ? {\n        ...user,\n        status: userStatus.status\n      } : user));\n    });\n    socket.on('chat history', history => {\n      if (selectedUser && !isGroupChat) {\n        localStorage.setItem(`chat_history_${selectedUser}`, JSON.stringify(history));\n        setMessages(history);\n      }\n    });\n    socket.on('group chat history', history => {\n      if (isGroupChat) {\n        localStorage.setItem('chat_history_group', JSON.stringify(history));\n        setMessages(history);\n      }\n    });\n\n    // Handle personal chat messages\n    socket.on('personal chat message', msg => {\n      if (!isGroupChat && (msg.to === selectedUser || msg.username === selectedUser || msg.username === localStorage.getItem('username'))) {\n        setMessages(prevMessages => {\n          const updatedMessages = [...prevMessages, msg];\n          localStorage.setItem(`chat_history_${selectedUser}`, JSON.stringify(updatedMessages));\n          return updatedMessages;\n        });\n      }\n    });\n\n    // Handle group chat messages\n    socket.on('group chat message', msg => {\n      if (isGroupChat) {\n        setMessages(prevMessages => {\n          const updatedMessages = [...prevMessages, msg];\n          localStorage.setItem('chat_history_group', JSON.stringify(updatedMessages));\n          return updatedMessages;\n        });\n      }\n    });\n    return () => {\n      socket.off('users list');\n      socket.off('user status');\n      socket.off('chat history');\n      socket.off('group chat history');\n      socket.off('personal chat message');\n      socket.off('group chat message');\n    };\n  }, [selectedUser, isGroupChat]);\n  useEffect(() => {\n    if (isGroupChat) {\n      const savedHistory = localStorage.getItem('chat_history_group');\n      if (savedHistory) {\n        setMessages(JSON.parse(savedHistory));\n      } else {\n        socket.emit('get group chat history');\n      }\n    } else if (selectedUser) {\n      const savedHistory = localStorage.getItem(`chat_history_${selectedUser}`);\n      if (savedHistory) {\n        setMessages(JSON.parse(savedHistory));\n      } else {\n        socket.emit('get chat history', selectedUser);\n      }\n    }\n  }, [selectedUser, isGroupChat]);\n  const sendMessage = () => {\n    const username = localStorage.getItem('username');\n    if (!username) {\n      console.error('Username is not found in localStorage');\n      return;\n    }\n    const msg = {\n      username,\n      text: message,\n      timestamp: new Date()\n    };\n    if (isGroupChat) {\n      socket.emit('group chat message', msg);\n    } else {\n      socket.emit('chat message', {\n        ...msg,\n        to: selectedUser\n      });\n      // Do not add the message to the local state here\n    }\n    setMessage('');\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    window.location.href = '/';\n  };\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const handleUserClick = user => {\n    if (user === 'Group Chat') {\n      setSelectedUser(null);\n      setIsGroupChat(true);\n    } else {\n      setSelectedUser(user);\n      setIsGroupChat(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    className: \"chatroom-layout\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      style: {\n        height: '100%',\n        padding: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 22,\n        md: 20,\n        lg: 18,\n        xl: 16,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"chatroom-card\",\n          title: \"Chat Room\",\n          bordered: false,\n          extra: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: logout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 20\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [16, 16],\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 24,\n              md: 8,\n              className: \"chatroom-sider\",\n              children: /*#__PURE__*/_jsxDEV(List, {\n                dataSource: ['Group Chat', ...users.map(user => user.username)],\n                renderItem: user => {\n                  var _users$find;\n                  return /*#__PURE__*/_jsxDEV(List.Item, {\n                    className: user === selectedUser ? 'ant-list-item-selected' : '',\n                    style: {\n                      cursor: 'pointer'\n                    },\n                    onClick: () => handleUserClick(user),\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: ((_users$find = users.find(u => u.username === user)) === null || _users$find === void 0 ? void 0 : _users$find.status) === 'online' ? 'user-badge' : 'user-badge-offline'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                        style: {\n                          marginLeft: '8px'\n                        },\n                        children: user\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 24,\n              md: 16,\n              children: /*#__PURE__*/_jsxDEV(Content, {\n                style: {\n                  padding: '10px'\n                },\n                children: isGroupChat || selectedUser ? /*#__PURE__*/_jsxDEV(Card, {\n                  title: isGroupChat ? \"Group Chat\" : `Chat with ${selectedUser}`,\n                  bordered: false,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    ref: chatContainerRef,\n                    id: \"chat-container\",\n                    className: \"chat-container\",\n                    style: {\n                      height: '300px',\n                      overflowY: 'auto'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(List, {\n                      dataSource: messages,\n                      renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: [item.username, \":\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 31\n                        }, this), \" \", item.text, ' ', /*#__PURE__*/_jsxDEV(\"em\", {\n                          children: new Date(item.timestamp).toLocaleTimeString()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 184,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    value: message,\n                    onChange: e => setMessage(e.target.value),\n                    onPressEnter: sendMessage,\n                    placeholder: \"Type a message...\",\n                    style: {\n                      marginBottom: '10px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"primary\",\n                    onClick: sendMessage,\n                    children: \"Send\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Please select a user to start chatting\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatroom-footer\",\n          children: [\"\\xA9 \", moment().format('YYYY')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"rn1T+jr3zIp3Ni63MSLHbwzkuDc=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Card","List","Input","Button","Layout","Row","Col","io","moment","jsxDEV","_jsxDEV","Content","socket","ChatRoom","_s","users","setUsers","selectedUser","setSelectedUser","messages","setMessages","message","setMessage","isGroupChat","setIsGroupChat","chatContainerRef","username","localStorage","getItem","emit","on","usersList","filter","user","userStatus","prevUsers","map","status","history","setItem","JSON","stringify","msg","to","prevMessages","updatedMessages","off","savedHistory","parse","sendMessage","console","error","text","timestamp","Date","logout","removeItem","window","location","href","current","scrollTop","scrollHeight","handleUserClick","className","children","justify","align","style","height","padding","xs","sm","md","lg","xl","title","bordered","extra","onClick","fileName","_jsxFileName","lineNumber","columnNumber","gutter","dataSource","renderItem","_users$find","Item","cursor","display","alignItems","find","u","marginLeft","ref","id","overflowY","item","toLocaleTimeString","value","onChange","e","target","onPressEnter","placeholder","marginBottom","type","format","_c","$RefreshReg$"],"sources":["/Users/avinashsaini/Documents/project/chat/client/src/components/Chatroom.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Card, List, Input, Button, Layout, Row, Col } from 'antd';\nimport io from 'socket.io-client';\nimport './ChatRoom.css';\nimport moment from 'moment';\n\nconst { Content } = Layout;\n\nconst socket = io('http://localhost:5500');\n\nconst ChatRoom = () => {\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isGroupChat, setIsGroupChat] = useState(false);\n  const chatContainerRef = useRef(null);\n\n  useEffect(() => {\n    const username = localStorage.getItem('username');\n    if (username) {\n      socket.emit('user connected', username);\n    }\n\n    socket.emit('get users');\n    socket.on('users list', (usersList) => {\n      setUsers(usersList.filter(user => user.username !== username)); // Filter out the signed-in user\n    });\n\n    socket.on('user status', (userStatus) => {\n      setUsers((prevUsers) =>\n        prevUsers.map(user =>\n          user.username === userStatus.username ? { ...user, status: userStatus.status } : user\n        )\n      );\n    });\n\n    socket.on('chat history', (history) => {\n      if (selectedUser && !isGroupChat) {\n        localStorage.setItem(`chat_history_${selectedUser}`, JSON.stringify(history));\n        setMessages(history);\n      }\n    });\n\n    socket.on('group chat history', (history) => {\n      if (isGroupChat) {\n        localStorage.setItem('chat_history_group', JSON.stringify(history));\n        setMessages(history);\n      }\n    });\n\n    // Handle personal chat messages\n    socket.on('personal chat message', (msg) => {\n      if (!isGroupChat && (msg.to === selectedUser || msg.username === selectedUser || msg.username === localStorage.getItem('username'))) {\n        setMessages((prevMessages) => {\n          const updatedMessages = [...prevMessages, msg];\n          localStorage.setItem(`chat_history_${selectedUser}`, JSON.stringify(updatedMessages));\n          return updatedMessages;\n        });\n      }\n    });\n    \n\n    // Handle group chat messages\n    socket.on('group chat message', (msg) => {\n      if (isGroupChat) {\n        setMessages((prevMessages) => {\n          const updatedMessages = [...prevMessages, msg];\n          localStorage.setItem('chat_history_group', JSON.stringify(updatedMessages));\n          return updatedMessages;\n        });\n      }\n    });\n\n    return () => {\n      socket.off('users list');\n      socket.off('user status');\n      socket.off('chat history');\n      socket.off('group chat history');\n      socket.off('personal chat message');\n      socket.off('group chat message');\n    };\n  }, [selectedUser, isGroupChat]);\n\n  useEffect(() => {\n    if (isGroupChat) {\n      const savedHistory = localStorage.getItem('chat_history_group');\n      if (savedHistory) {\n        setMessages(JSON.parse(savedHistory));\n      } else {\n        socket.emit('get group chat history');\n      }\n    } else if (selectedUser) {\n      const savedHistory = localStorage.getItem(`chat_history_${selectedUser}`);\n      if (savedHistory) {\n        setMessages(JSON.parse(savedHistory));\n      } else {\n        socket.emit('get chat history', selectedUser);\n      }\n    }\n  }, [selectedUser, isGroupChat]);\n\n  const sendMessage = () => {\n    const username = localStorage.getItem('username');\n    if (!username) {\n      console.error('Username is not found in localStorage');\n      return;\n    }\n  \n    const msg = { username, text: message, timestamp: new Date() };\n  \n    if (isGroupChat) {\n      socket.emit('group chat message', msg);\n    } else {\n      socket.emit('chat message', { ...msg, to: selectedUser });\n      // Do not add the message to the local state here\n    }\n    setMessage('');\n  };\n  \n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    window.location.href = '/';\n  };\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const handleUserClick = (user) => {\n    if (user === 'Group Chat') {\n      setSelectedUser(null);\n      setIsGroupChat(true);\n    } else {\n      setSelectedUser(user);\n      setIsGroupChat(false);\n    }\n  };\n\n  return (\n    <Layout className=\"chatroom-layout\">\n      <Row justify=\"center\" align=\"middle\" style={{ height: '100%', padding: '10px' }}>\n        <Col xs={24} sm={22} md={20} lg={18} xl={16}>\n          <Card\n            className=\"chatroom-card\"\n            title=\"Chat Room\"\n            bordered={false}\n            extra={<Button onClick={logout}>Logout</Button>}\n          >\n            <Row gutter={[16, 16]}>\n              <Col xs={24} md={8} className=\"chatroom-sider\">\n                <List\n                  dataSource={['Group Chat', ...users.map(user => user.username)]}\n                  renderItem={(user) => (\n                    <List.Item\n                      className={user === selectedUser ? 'ant-list-item-selected' : ''}\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => handleUserClick(user)}\n                    >\n                      <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <div\n                          className={users.find(u => u.username === user)?.status === 'online' ? 'user-badge' : 'user-badge-offline'}\n                        />\n                        <strong style={{ marginLeft: '8px' }}>{user}</strong>\n                      </div>\n                    </List.Item>\n                  )}\n                />\n              </Col>\n              <Col xs={24} md={16}>\n                <Content style={{ padding: '10px' }}>\n                  {isGroupChat || selectedUser ? (\n                    <Card title={isGroupChat ? \"Group Chat\" : `Chat with ${selectedUser}`} bordered={false}>\n                      <div ref={chatContainerRef} id=\"chat-container\" className=\"chat-container\" style={{ height: '300px', overflowY: 'auto' }}>\n                        <List\n                          dataSource={messages}\n                          renderItem={(item) => (\n                            <List.Item>\n                              <strong>{item.username}:</strong> {item.text}{' '}\n                              <em>{new Date(item.timestamp).toLocaleTimeString()}</em>\n                            </List.Item>\n                          )}\n                        />\n                      </div>\n                      <Input\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        onPressEnter={sendMessage}\n                        placeholder=\"Type a message...\"\n                        style={{ marginBottom: '10px' }}\n                      />\n                      <Button type=\"primary\" onClick={sendMessage}>\n                        Send\n                      </Button>\n                    </Card>\n                  ) : (\n                    <div>Please select a user to start chatting</div>\n                  )}\n                </Content>\n              </Col>\n            </Row>\n          </Card>\n          <div className=\"chatroom-footer\">\n            © {moment().format('YYYY')}\n          </div>\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n\nexport default ChatRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}